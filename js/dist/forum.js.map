{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@nodeloc/telegram/webpack/bootstrap","webpack://@nodeloc/telegram/webpack/runtime/compat get default export","webpack://@nodeloc/telegram/webpack/runtime/define property getters","webpack://@nodeloc/telegram/webpack/runtime/hasOwnProperty shorthand","webpack://@nodeloc/telegram/webpack/runtime/make namespace object","webpack://@nodeloc/telegram/external root \"flarum.core.compat['app']\"","webpack://@nodeloc/telegram/external root \"flarum.core.compat['models/User']\"","webpack://@nodeloc/telegram/external root \"flarum.core.compat['Model']\"","webpack://@nodeloc/telegram/external root \"flarum.core.compat['extend']\"","webpack://@nodeloc/telegram/external root \"flarum.core.compat['components/LogInButtons']\"","webpack://@nodeloc/telegram/external root \"flarum.core.compat['components/NotificationGrid']\"","webpack://@nodeloc/telegram/external root \"flarum.core.compat['components/SettingsPage']\"","webpack://@nodeloc/telegram/./src/forum/index.js","webpack://@nodeloc/telegram/./src/forum/addLoginButton.js","webpack://@nodeloc/telegram/./src/forum/addNotificationMethod.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LogInButtons'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/NotificationGrid'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/SettingsPage'];","import app from 'flarum/app';\nimport User from 'flarum/models/User';\nimport Model from 'flarum/Model';\nimport addLoginButton from './addLoginButton';\nimport addNotificationMethod from './addNotificationMethod';\napp.initializers.add('nikovonlas-tg-notify', () => {\n  User.prototype.canReceiveTelegramNotifications = Model.attribute('canReceiveTelegramNotifications');\n  User.prototype.nodelocTelegramError = Model.attribute('nodelocTelegramError');\n  addLoginButton();\n  addNotificationMethod();\n});\n","import { extend } from 'flarum/extend';\nimport LogInButtons from 'flarum/components/LogInButtons';\nimport app from 'flarum/app';\n\nexport default function () {\n  const enableWidget = app.forum.attribute('nikovonlas-tg-notify.enableWidget');\n  if (!enableWidget) {\n    return;\n  }\n  const authUrl = app.forum.attribute('baseUrl') + '/auth/telegram';\n  const botUsername = app.forum.attribute('nikovonlas-tg-notify.addWidget');\n  const size = app.forum.attribute('nikovonlas-tg-notify.widgetSize');\n  const radius = app.forum.attribute('nikovonlas-tg-notify.widgetRadius');\n  const userPic = app.forum.attribute('nikovonlas-tg-notify.widgetUserPic');\n  extend(LogInButtons.prototype, 'items', function (items) {\n    // Replace the TelegramProvide widget script\n    items.add(\n      'nikovonlas-tg-notify',\n      m('script', {\n        async: true,\n        src: 'https://telegram.org/js/telegram-widget.js?22',\n        'data-telegram-login': botUsername,\n        'data-size': size,\n        'data-radius': radius,\n        'data-userpic': userPic,\n        'data-auth-url': authUrl,\n        'data-request-access': 'write',\n      })\n    );\n  });\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport NotificationGrid from 'flarum/components/NotificationGrid';\nimport SettingsPage from 'flarum/components/SettingsPage';\n\nexport default function () {\n  extend(NotificationGrid.prototype, 'notificationMethods', function (items) {\n    if (!app.forum.attribute('nikovonlas-tg-notify.enableNotifications')) {\n      return;\n    }\n    if (!app.session || !app.session.user) {\n      return;\n    }\n\n    let user = app.session.user;\n    if (!user || !user.canReceiveTelegramNotifications()) {\n      return;\n    }\n    // Add telegram notifications method column\n    items.add('telegram', {\n      name: 'telegram',\n      icon: 'fab fa-telegram-plane',\n      label: app.translator.trans('nikovonlas-tg-notify.forum.settings.notify_by_telegram_heading'),\n    });\n  });\n  extend(SettingsPage.prototype, 'accountItems', function (items) {\n    if (!app.forum.attribute('nikovonlas-tg-notify.enableNotifications')) {\n      return;\n    }\n    if (!app.session || !app.session.user) {\n      return;\n    }\n\n    let user = app.session.user;\n    if (user && !user.canReceiveTelegramNotifications()) {\n      // add button to link current account with telegram\n      const authUrl = app.forum.attribute('baseUrl') + '/auth/telegram';\n      const botUsername = app.forum.attribute('nikovonlas-tg-notify.botUsername');\n\n      // Replace the TelegramProvide widget script\n      items.add(\n        'nikovonlas-tg-notify',\n        m('script', {\n          async: true,\n          src: 'https://telegram.org/js/telegram-widget.js?22',\n          'data-telegram-login': botUsername,\n          'data-size': 'large',\n          'data-radius': '10',\n          'data-auth-url': authUrl,\n          'data-request-access': 'write',\n        })\n      );\n    }\n  });\n  extend(SettingsPage.prototype, 'notificationsItems', function (items) {\n    if (!app.forum.attribute('nikovonlas-tg-notify.enableNotifications')) {\n      return;\n    }\n    if (!app.session || !app.session.user) {\n      return;\n    }\n\n    let user = app.session.user;\n    if (!user || !user.nodelocTelegramError()) {\n      return;\n    }\n    const botUsername = app.forum.attribute('nikovonlas-tg-notify.botUsername');\n\n    items.add('nodelocTelegramError', {\n      view() {\n        return m(\n          '.Alert',\n          m(\n            'p',\n            app.translator.trans('nikovonlas-tg-notify.forum.settings.unblock_telegram_bot', {\n              a: m('a', { href: 'https://t.me/' + botUsername }),\n              username: '@' + botUsername,\n            })\n          )\n        );\n      },\n    });\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","User","canReceiveTelegramNotifications","Model","nodelocTelegramError","attribute","authUrl","botUsername","size","radius","userPic","extend","LogInButtons","items","m","async","src","addLoginButton","NotificationGrid","user","name","icon","label","trans","SettingsPage","view","href","username"],"sourceRoot":""}